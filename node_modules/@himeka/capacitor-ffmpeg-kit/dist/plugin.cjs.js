'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@capacitor/core');

const FFmpegKitPlugin = core.registerPlugin('FFmpegKitPlugin', {
    web: () => Promise.resolve().then(function () { return web; }).then(m => new m.FFmpegKitPluginWeb()),
});

class FFmpegKitPluginWeb extends core.WebPlugin {
    async scanFile(options) {
        console.warn("The scanFile method is not implemented for the web platform.");
    }
    async execute(_options) {
        // You need to implement this method or just return a mock for testing
        console.warn("The executeFFmpegCommand method is not implemented for the web platform.");
        return { returnCode: -1 };
    }
}

var web = /*#__PURE__*/Object.freeze({
    __proto__: null,
    FFmpegKitPluginWeb: FFmpegKitPluginWeb
});

exports.FFmpegKitPlugin = FFmpegKitPlugin;
//# sourceMappingURL=plugin.cjs.js.map
